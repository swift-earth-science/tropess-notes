Traceback (most recent call last):
  File "/Users/valentin/Work/Git/Swift/tropess-notes-src/.venv/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/valentin/Work/Git/Swift/tropess-notes-src/.venv/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/valentin/Work/Git/Swift/tropess-notes-src/.venv/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/valentin/.pyenv/versions/3.10.0/lib/python3.10/asyncio/base_events.py", line 641, in run_until_complete
    return future.result()
  File "/Users/valentin/Work/Git/Swift/tropess-notes-src/.venv/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/valentin/Work/Git/Swift/tropess-notes-src/.venv/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/valentin/Work/Git/Swift/tropess-notes-src/.venv/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

# Open the netCDF file
dataset = Dataset('../data/TROPESS_CrIS-JPSS1_L2_Summary_CH4_20230516_MUSES_R1p20_FS_F0p6.nc', 'r')

# Read the data from your variables
latitude = dataset.variables['latitude'][:]
longitude = dataset.variables['longitude'][:]
x_col_p = dataset.variables['x_col_p'][:]

dataset.close()

# Specify figure size (in inches)
dpi=300; w=3600 / dpi; h=2400 / dpi
plt.figure(figsize=(w, h))  

# Create a basemap instance
m = Basemap(projection='cyl', resolution='l',
            llcrnrlat=-90, urcrnrlat=90,  # set latitude limits to -90 and 90
            llcrnrlon=-180, urcrnrlon=180)  # set longitude limits to -180 and 180

m.drawcoastlines(linewidth=0.5)
m.drawcountries(linewidth=0.5)

# Draw parallels (latitude lines) and meridians (longitude lines)
parallels = np.arange(-90., 91., 30.)
m.drawparallels(parallels, labels=[True,False,False,False], linewidth=0.3)

meridians = np.arange(-180., 181., 60.)
m.drawmeridians(meridians, labels=[False,False,False,True], linewidth=0.3)

# Get the grid for the interpolated values
grid_lat, grid_lon = np.mgrid[-90:91:1, -180:181:1]

# Interpolate the data using griddata
grid_x_col_p = griddata((latitude, longitude), x_col_p, (grid_lat, grid_lon), method='linear')

# Find the distance to the nearest original point for each point in the interpolated grid
tree = cKDTree(np.vstack((latitude, longitude)).T)
dist, _ = tree.query(np.vstack((grid_lat.ravel(), grid_lon.ravel())).T)

# Reshape the distance array to have the same shape as the x_col_p grid
dist_grid = dist.reshape(grid_x_col_p.shape)

# Mask the interpolated values that are too far from any original point
max_distance_degrees = 3.0
grid_x_col_p[dist_grid > max_distance_degrees] = np.nan

# Plot the interpolated data using pcolormesh instead of scatter
sc = m.pcolormesh(grid_lon, grid_lat, grid_x_col_p, latlon=True, cmap='jet')

# Add a colorbar
cbar = m.colorbar(sc, location='bottom', pad="10%")
cbar.set_label('x_col_p')

plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[2], line 2[0m
[1;32m      1[0m [38;5;66;03m# Open the netCDF file[39;00m
[0;32m----> 2[0m dataset [38;5;241m=[39m [43mDataset[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43m../data/TROPESS_CrIS-JPSS1_L2_Summary_CH4_20230516_MUSES_R1p20_FS_F0p6.nc[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mr[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m      4[0m [38;5;66;03m# Read the data from your variables[39;00m
[1;32m      5[0m latitude [38;5;241m=[39m dataset[38;5;241m.[39mvariables[[38;5;124m'[39m[38;5;124mlatitude[39m[38;5;124m'[39m][:]

File [0;32msrc/netCDF4/_netCDF4.pyx:2449[0m, in [0;36mnetCDF4._netCDF4.Dataset.__init__[0;34m()[0m

File [0;32msrc/netCDF4/_netCDF4.pyx:2012[0m, in [0;36mnetCDF4._netCDF4._ensure_nc_success[0;34m()[0m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '../data/TROPESS_CrIS-JPSS1_L2_Summary_CH4_20230516_MUSES_R1p20_FS_F0p6.nc'

